--Exercise 1

restart
R = QQ[z, x, y, Degrees => {1, 1, 1}, MonomialOrder => Eliminate 1]
-- z has to come before as this is the variable that will be eliminated
I = ideal(x^3*y^3*z^3-x-y-z-1, x^5+y^5+z^5-2)
-- Easy example so we understand what is happening
J = ideal(x + y + z -1, x^2+y^2+z^2- 2)
g = groebnerBasis J;
r = rank source g;
for i from 0 to r-1 do(
    if not member(z, support g_(0, i)) then toString print g_(0, i)
)

g = groebnerBasis I;
r = rank source g;
-- member(z, support g_(0, 0))
-- tests if z occurs in the polynomial g_(0, 0), the first polynomial of the matrix g
for i from 0 to r-1 do(
    if not member(z, support g_(0, i)) then print toString g_(0, i)
)

--Exercise 2

--Exercise 3
--Syl_(1, 5)
restart
R = QQ[x00, x01, x10, x11, x12, x13, x14, x15];
M = matrix({{x00, x01, 0, 0, 0, 0}, 
{0, x00, x01, 0, 0, 0},
{0, 0, x00, x01, 0, 0},
{0, 0, 0, x00, x01, 0}, 
{0, 0, 0, 0, x00, x01},
{x10, x11, x12, x13, x14, x15} 
});
determinant M

--Syl_(2, 4)
restart
R = QQ[x00, x01, x02, x10, x11, x12, x13, x14];
M = matrix({{x00, x01, x02, 0, 0, 0}, 
{0, x00, x01, x02, 0, 0},
{0, 0, x00, x01, x02, 0},
{0, 0, 0, x00, x01, x02},
{x10, x11, x12, x13, x14, 0},
{0, x10, x11, x12, x13, x14} 
});
determinant M

--Syl_(3, 3)
restart
R = QQ[x00, x01, x02, x03, x10, x11, x12, x13];
M = matrix({{x00, x01, x02, x03, 0, 0}, 
{0, x00, x01, x02, x03, 0},
{0, 0, x00, x01, x02, x03},
{x10, x11, x12, x13, 0, 0},
{0, x10, x11, x12, x13, 0},
{0, 0, x10, x11, x12, x13} 
});
determinant M





-- Exercise 4



-- Exercise 5 

-- If A is skew-symmetric, det(A) = det (A^T) = (-1)^5 det(A) so A is not invertible


-- Exercise 6
restart
R = QQ[x45, x12, x13, x14, x15, x23, x24, x25, x34, x35, Degrees => {10:1}, MonomialOrder => Eliminate 2];
X = matrix({{0, x12, x13, x14, x15}, 
{-x12, 0, x23, x24, x25}, 
{-x13, -x23, 0, x34, x35}, 
{-x14, -x24, -x34, 0, x45}, 
{-x15, -x25, -x35, -x45, 0}});
I = minors(3, X);
g = groebnerBasis I;
r = rank source g;
for i from 0 to r-1 do(
    if ((not member(x45, support g_(0, i))) and (not member(x12, support g_(0, i)))) then toString print g_(0, i)
)


-- Exercise 7
-- Note that {{1, 2, 3}, {3, 2, 1}} . {{2, -2, 4}, {-1, 3, 0}, {0, 0, -4}} = {{4, 0, 0}, {0, 4, 0}}
-- Let A be the inverse of \frac{1}{4}{{2, -2, 4}, {-1, 3, 0}, {0, 0, -4}} (has determinant -16)
-- V is an algebraic variety generated by the radical ideal I = ideal(f_1, ...)
-- substitute on each f_i the variable x_i by \sum_j a_(i, j)y_j
-- Eliminate variable y_3



-- Exercise 8
-- Use Corollary 4.8, I = <f_1 - z1, f_2-z2 , .., f_6 - z6>
restart
R = QQ[x, y, z, z1, z2, z3, z4, z5, z6, Degrees => {3:1, 6:2}, MonomialOrder => Eliminate 3];
I = ideal(x^2- z1,
x*y - z2,
x*z - z3,
y^2 - z4,
y*z - z5,
z^2 - z6);
IX = ideal(x^3 + y^3 + z^3);
J = I+IX;
g = groebnerBasis J;
r = rank source g;
L = new List from {};
for i from 0 to r-1 do(
    if ((not member(x, support g_(0, i))) and (not member(y, support g_(0, i))) and (not member(z, support g_(0, i)))) then L = append(L, g_(0, i))
)
K = ideal L;
isPrime K -- true, as expected

--Exercise 9
restart
R = QQ[x_1..x_9, y_1..y_9, Degrees => {9:1, 9:2}, MonomialOrder => Eliminate 9];
M = genericMatrix(R, 3, 3);
N = genericMatrix(R, y_1, 3, 3);
I = ideal(M*M-N);
IX = ideal(x_1+x_4+x_9);
J = I+IX;
g = groebnerBasis J; -- takes a bit to run
r = rank source g;

-- function that checks if polynomial p contains any of the variables in l
c_var = (p, l)->(
    k = length l;
    ans = false;
    for i from 0 to k-1 do(
        if member(l_i, support p) then ans = true;
    );
    ans
)

L = new List from {};
v = x_1..x_9;
for i from 0 to r-1 do(
    if not c_var(g_(0, i), v) then L = append(L, g_(0, i))
)
length L
print toString L_0

--Exercise 10
restart
R = QQ[x_1..x_18]
M = genericMatrix(R, 3, 6)
I = gens minors(3, M)
mingens I
-- Not completed 


--Exercise 11


--Exercise 12

-- V_1 + V_2 is the image of V_1 x V_2 in (C^d)^2 -> C^d given by (x, y) -> (x+y)
-- One can use corollary 4.8 to find the vanishing ideal of the Zarisky closure of the image of this variety over the map

--Exercise 13



-- Exercise 14


-- Exercise 15

-- Exercise 16
restart
R = QQ[x_1, x_5, x_9, x_2, x_3, x_4, x_6, x_7, x_8, MonomialOrder=> Eliminate 3];
M = matrix({{x_1, x_2, x_3}, {x_4, x_5, x_6}, {x_7, x_8, x_9}});
I = minors(2, M);

g = groebnerBasis I;
r = rank source g;

-- function that checks if polynomial p contains any of the variables in l
c_var = (p, l)->(
    k = length l;
    ans = false;
    for i from 0 to k-1 do(
        if member(l_i, support p) then ans = true;
    );
    ans
)

L = new List from {};
v = {x_1, x_5, x_9};
for i from 0 to r-1 do(
    if not c_var(g_(0, i), v) then L = append(L, g_(0, i))
)
length L
print toString L_0 -- x_2*x_6*x_7 = x_3*x_4*x_8

-- Exercise 17

-- Exercise 18

-- Exercise 19